Algorithm to create gradient fallback for an image.

Args to pass in:
(Set reasonable defaults for optional args)

@imagePath: path to image (required)
@gradientType: linear-gradient() horizontal / vertical / diagonal, radial-gradient() (optional)
@bands: number of bands (optional)
@vendorPrefix: include vendor prefixes for gradient (optional)
@cssComments: include comments in generated CSS gradient? (i.e /* fallback color */ /* For Chrome 25 and Safari 6, iOS 6.1, Android 4.3 */ etc).
@output?: CSS gradient | <canvas> | <svg> (optional)

Gradient class?
LinearGradient extends Gradient
RadialGradient extends Gradient

i.e Gradient gradient = new Gradient()
gradient.toCSS();

Would be cool to generate image/overlay showing:
 - Each band region
 - Each band region filled with average color (of that band)

Resize large images to make generating gradient quicker?

Todos:

- CLI arguments
    -- help
- `webkit-linear-gradient` not working for gradientType `l2r`
    - Gradient prefix is different -webkit-linear-gradient(left, red, blue); "left" instead of "to right".
    - Should check other vendor prefixs for different gradientTypes...
- Band visualisations
    - Show average color in each band
    - Overlay image with lines showing each band
- Web interface
- Velocity macro

beach.jpg with fidelity 400 looks amazing!